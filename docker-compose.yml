# docker-compose.yml
version: '3.8'

networks:
  moocflix-network:
    driver: bridge

volumes:
  kafka_data:
  zookeeper_data:

services:
  # Infrastructure Services
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - moocflix-network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - moocflix-network
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    volumes:
      - kafka_data:/var/lib/kafka/data
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Application Services
  api-gateway:
    build: ./api-gateway
    networks:
      - moocflix-network
    ports:
      - "8000:8000"
    depends_on:
      - user-management
      - course-management
      - content-delivery
      - assessment
      - notification
      - transcoding

  user-management:
    build: ./user-management-service
    networks:
      - moocflix-network
    env_file: .env
    depends_on:
      kafka:
        condition: service_healthy
    ports:
      - "3001:3000"

  course-management:
    build: ./course-management-service
    networks:
      - moocflix-network
    env_file: .env
    depends_on:
      - kafka
      - user-management
    ports:
      - "3002:3000"

  content-delivery:
    build: ./content-delivery-service
    networks:
      - moocflix-network
    env_file: .env
    depends_on:
      - kafka
    ports:
      - "3003:3000"

  assessment:
    build: ./assessment-service
    networks:
      - moocflix-network
    env_file: .env
    depends_on:
      - kafka
    ports:
      - "3004:3000"

  notification:
    build: ./notification-service
    networks:
      - moocflix-network
    env_file: .env
    depends_on:
      - kafka
    ports:
      - "3005:3000"

  transcoding:
    build: ./transcoding-service
    networks:
      - moocflix-network
    env_file: .env
    depends_on:
      - kafka
    ports:
      - "3006:3000"